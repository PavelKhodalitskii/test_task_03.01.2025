# Generated by Django 5.0.6 on 2025-01-05 15:17

from django.db import migrations
from accounts.service import UserController 
from django.contrib.auth import get_user_model

brands_names = ['Toyota', 'Ford', 'Honda']

def create_test_data(apps, schema):
    User = apps.get_model("auth", "User")
    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")

    group = Group.object.create(name="default_user")

    comments_permissions = Permission.objects.filter(codename__endswith='comment')
    car_permissions = Permission.objects.filter(codename__endswith='car')

    for comment_perm in comments_permissions:
        group.permissions.add(comment_perm.id)

    for car_perm in car_permissions:
        group.permissions.add(car_perm.id)


    admin = User.objects.create_user(username='admin', password='admin', first_name='Павел', last_name='Ходалицкий')
    admin.groups.add(group.id)

    new_user = User.objects.create_user(username='default', password='default', first_name='Иван', last_name='Иванов')
    new_user.groups.add(group.id)

    brands = []

    Brand = apps.get_model("cars_manager", "Brand")

    for brand_name in brands_names:
        brands.append(Brand.objects.create(name=brand_name))
        
    Car = apps.get_model("cars_manager", "Car")
    car_1 = Car.objects.create(make=brands[brands_names.index("Toyota")],
                                model="Camry", 
                                year=2021,
                                description="Компактный седан с отличной экономией топлива и современными технологиями безопасности.",
                                owner=new_user)
    car_2 = Car.objects.create(make=brands[brands_names.index("Ford")],
                                model="Mustang", 
                                year=2015,
                                description="Спортивный автомобиль с мощным двигателем и агрессивным дизайном.",
                                owner=new_user)
    car_3 = Car.objects.create(make=brands[brands_names.index("Honda")],
                                model="Civic", 
                                year=2020,
                                description="Надежный и экономичный седан, идеален для городской эксплуатации.",
                                owner=admin)
    
class Migration(migrations.Migration):
    dependencies = [
        ('cars_manager', '0006_rename_comments_comment_and_more'),
    ]

    operations = [
        migrations.RunPython(create_test_data, migrations.RunPython.noop)
    ]
